// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$primary: (
  50: #bb5c58,
  100: #bc3a33,
  200: #ac1c17,
  300: #9c1313,
  400: #8f0b0c,
  500: #800000,
  600: #d18885,
  700: #f8e6e8,
  800: #edc1c4,
  900: #b92617,
  A100: #c2e4ff,
  A200: #addcff,
  A400: #5eff00,
  A700: #a6ff00,
  contrast: (50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: rgb(255, 55, 55),
    700: rgb(0, 0, 0),
    800: rgb(0, 217, 255),
    900: rgb(187, 255, 0),
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: white,
    A700: white,
  )
);

$accent: (
  50: #f8e6e8,
  100: #edc1c4,
  200: #d18885,
  300: #bb5c58,
  400: #bc3a33,
  500: #b92617,
  600: #ac1c17,
  700: #9c1313,
  800: #8f0b0c,
  900: #800000,
  A100: #c2e4ff,
  A200: #addcff,
  A400: #5eff00,
  A700: #a6ff00,
  contrast: (50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: rgb(255, 55, 55),
    700: rgb(0, 0, 0),
    800: rgb(0, 217, 255),
    900: rgb(187, 255, 0),
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: white,
    A700: white,
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$tasteItWeb-primary: mat.define-palette($primary);
$tasteItWeb-accent: mat.define-palette($accent);

// The warn palette is optional (defaults to red).
$tasteItWeb-warn: mat.define-palette(mat.$red-palette);




// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$tasteItWeb-theme: mat.define-light-theme((color: (primary: $tasteItWeb-primary,
        accent: $tasteItWeb-accent,
        warn: $tasteItWeb-warn,
      )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($tasteItWeb-theme);

//@import '~ngx-bar-rating/themes/br-default-theme.scss';

.container {
  margin-right: auto;
  margin-left: auto;
  margin-top: 5px;
  max-width: 1600px;
  width: 100%;
  // padding-right: 15px;
  // padding-left: 15px;
}


.spacer {
  flex: 1 1 auto;
}


//BAR RATING - STARS
$star-utf8: '\2605';

.br-default {
  --br-font-size: 26px;

  .br-units {
    align-items: center;
  }

  .br-unit-inner {

    &:before {
      content: $star-utf8;
      color: var(--br-inactive-color);
      width: 100%;
    }
  }

  .br-active:before {
    color: var(--br-active-color);
  }

  .br-fraction {
    &:after {
      color: var(--br-active-color);
      content: $star-utf8;
      width: 50%;
      position: absolute;
      top: 0;
      left: 0;
      overflow: hidden;
    }
  }

}

//TABS

.horizontal-line {
  margin-top: 20px;
  height: 2px;
  background-color: maroon;
}

.mat-mdc-tab {
  background-color: maroon !important;
}

.mdc-tab__text-label {
  color: white !important;
}

.mdc-tab--active {
  background-color: rgb(215, 135, 135) !important;

  .mdc-tab__text-label {
    color: maroon !important;
  }

  .mdc-tab-indicator__content {
    border-color: maroon !important;
  }
}

//chips

.chipCustom {
  background-color: maroon !important;
}

.chipCustom span {
  color: white !important;
}

.chipIcon {
  color: white !important;
}


//user cards
.user-cards img {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  object-fit: cover;
  cursor: pointer;
  background-color: maroon !important;
  border: 3px solid maroon;
}

//rating
.star {
  color: yellow;
}

.alert-no-recipes {
  background-color: rgb(215,135,135);
  color: white;
  padding: 15px;
  margin:15px;
  border-radius: 15px 15px 15px 15px;
}

body {
  margin: 0px;
  padding: 0px;
}

.menu-fix {
  min-width: 0px !important;
}


//EFECTOS CSS

.fadeIn {
  -webkit-animation-name: fadeIn;
  animation-name: fadeIn;
  -webkit-animation-duration: 0.5s;
  animation-duration: 0.5s;
  // -webkit-animation-fill-mode: both;
  // animation-fill-mode: both;
}

@-webkit-keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}


.fadeOut {
  -webkit-animation-name: fadeOut;
  animation-name: fadeOut;
  -webkit-animation-duration: 0.5s;
  animation-duration: 0.5s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    height: 0px;
    // display: none !important;
  }
}

.wobble {
  -webkit-animation-name: wobble;
  animation-name: wobble;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

@-webkit-keyframes wobble {
  0% {
    -webkit-transform: none;
    transform: none;
  }

  15% {
    -webkit-transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    -webkit-transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    -webkit-transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    -webkit-transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  100% {
    -webkit-transform: none;
    transform: none;
  }
}

@keyframes wobble {
  0% {
    -webkit-transform: none;
    transform: none;
  }

  15% {
    -webkit-transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    -webkit-transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    -webkit-transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    -webkit-transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  100% {
    -webkit-transform: none;
    transform: none;
  }
}


//shimmer

.shine {
  background: rgb(240, 212, 212);
  background-image: linear-gradient(to right, rgb(240, 212, 212) 0%, rgb(240, 212, 212) 20%, rgb(240, 212, 212) 40%, rgb(215, 135, 135) 100%);
  background-repeat: no-repeat;
  background-size: 1000px 100%;
  display: inline-block;
  position: relative;

  animation-duration: 1.1s;
  animation-fill-mode: forwards;
  animation-iteration-count: infinite;
  animation-name: placeholderShimmer;
  animation-timing-function: linear;
}

.title-sh {
  height: 50px;
  width: 200px;
  border-radius: 10px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.card-sh {
  height: 450px;
  width: 325px;
  margin: 20px;
  border-radius: 10px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.photo-profile-sh {
  width: 300px;
  height: 300px;
  border-radius: 50%;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.photo-recipe-sh {
  width: 300px;
  height: 300px;
  border-radius: 25px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.small-chip-sh {
  width: 100px;
  height: 50px;
  border-radius: 25px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.big-chip-sh {
  width: 225px;
  height: 45px;
  border-radius: 45px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.square-chip-sh {
  width: 150px;
  height: 100px;
  border-radius: 25px;
  padding: 15px;
  margin: 20px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.big-box-sh {
  height: 300px;
  width: 1550px;
  margin: 20px;
  border-radius: 10px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

.random-box-sh {
  height: 800px;
  width: 1625px;
  margin: 20px;
  border-radius: 10px;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
}

@keyframes placeholderShimmer {
  0% {
    background-position: -1200px 0;
  }

  100% {
    background-position: 1200px 0;
  }
}